// Code generated by protoc-gen-go.
// source: user.proto
// DO NOT EDIT!

package model

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type User struct {
	// Static info
	Id               int64          `protobuf:"varint,1,opt,name=Id,json=id" json:"Id,omitempty"`
	Email            string         `protobuf:"bytes,2,opt,name=Email,json=email" json:"Email,omitempty"`
	PwdHash          string         `protobuf:"bytes,3,opt,name=PwdHash,json=pwdHash" json:"PwdHash,omitempty"`
	MaxConn          int32          `protobuf:"varint,4,opt,name=MaxConn,json=maxConn" json:"MaxConn,omitempty"`
	CreatedTimestamp int64          `protobuf:"varint,5,opt,name=CreatedTimestamp,json=createdTimestamp" json:"CreatedTimestamp,omitempty"`
	ExpiredTimestamp int64          `protobuf:"varint,6,opt,name=ExpiredTimestamp,json=expiredTimestamp" json:"ExpiredTimestamp,omitempty"`
	IsEnabled        bool           `protobuf:"varint,7,opt,name=IsEnabled,json=isEnabled" json:"IsEnabled,omitempty"`
	Sessions         []*UserSession `protobuf:"bytes,128,rep,name=Sessions,json=sessions" json:"Sessions,omitempty"`
}

func (m *User) Reset()                    { *m = User{} }
func (m *User) String() string            { return proto.CompactTextString(m) }
func (*User) ProtoMessage()               {}
func (*User) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

func (m *User) GetSessions() []*UserSession {
	if m != nil {
		return m.Sessions
	}
	return nil
}

type UserSession struct {
	Token          string `protobuf:"bytes,1,opt,name=Token,json=token" json:"Token,omitempty"`
	Id             int64  `protobuf:"varint,2,opt,name=Id,json=id" json:"Id,omitempty"`
	LoginTimestamp int64  `protobuf:"varint,3,opt,name=LoginTimestamp,json=loginTimestamp" json:"LoginTimestamp,omitempty"`
	Traffic        int64  `protobuf:"varint,4,opt,name=Traffic,json=traffic" json:"Traffic,omitempty"`
	IP             string `protobuf:"bytes,5,opt,name=IP,json=iP" json:"IP,omitempty"`
}

func (m *UserSession) Reset()                    { *m = UserSession{} }
func (m *UserSession) String() string            { return proto.CompactTextString(m) }
func (*UserSession) ProtoMessage()               {}
func (*UserSession) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{1} }

type UserCredit struct {
	Id             int64 `protobuf:"varint,1,opt,name=Id,json=id" json:"Id,omitempty"`
	Credit         int64 `protobuf:"varint,2,opt,name=Credit,json=credit" json:"Credit,omitempty"`
	TopUpTimestamp int64 `protobuf:"varint,3,opt,name=TopUpTimestamp,json=topUpTimestamp" json:"TopUpTimestamp,omitempty"`
}

func (m *UserCredit) Reset()                    { *m = UserCredit{} }
func (m *UserCredit) String() string            { return proto.CompactTextString(m) }
func (*UserCredit) ProtoMessage()               {}
func (*UserCredit) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{2} }

func init() {
	proto.RegisterType((*User)(nil), "model.User")
	proto.RegisterType((*UserSession)(nil), "model.UserSession")
	proto.RegisterType((*UserCredit)(nil), "model.UserCredit")
}

var fileDescriptor1 = []byte{
	// 319 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x64, 0x91, 0x4d, 0x4b, 0xfb, 0x30,
	0x1c, 0xc7, 0x69, 0xbb, 0xb6, 0xeb, 0x6f, 0x30, 0x46, 0xf8, 0xf3, 0x27, 0x07, 0x0f, 0x63, 0x07,
	0x19, 0x1e, 0x26, 0xe8, 0x4b, 0x18, 0x03, 0x07, 0x0a, 0xa3, 0x76, 0x37, 0x2f, 0xd9, 0x92, 0x69,
	0xb0, 0x4d, 0x42, 0x13, 0x71, 0x47, 0x2f, 0xe2, 0xdb, 0x36, 0x0f, 0x55, 0xf7, 0x70, 0xfc, 0x3e,
	0x90, 0x7c, 0xf3, 0x09, 0xc0, 0x9b, 0x66, 0xed, 0x4c, 0xb5, 0xd2, 0x48, 0x94, 0x36, 0x92, 0xb2,
	0x7a, 0xf2, 0x15, 0x43, 0x6f, 0x6d, 0x5d, 0x34, 0x84, 0x78, 0x49, 0x71, 0x34, 0x8e, 0xa6, 0x49,
	0x19, 0x73, 0x8a, 0xfe, 0x41, 0xba, 0x68, 0x08, 0xaf, 0x71, 0x6c, 0xad, 0xa2, 0x4c, 0x99, 0x13,
	0x08, 0x43, 0xbe, 0x7a, 0xa7, 0x77, 0x44, 0xbf, 0xe0, 0xc4, 0xfb, 0xb9, 0x0a, 0xd2, 0x25, 0x0f,
	0x64, 0x3f, 0x97, 0x42, 0xe0, 0x9e, 0x4d, 0xd2, 0x32, 0x6f, 0x82, 0x44, 0x57, 0x30, 0x9a, 0xb7,
	0x8c, 0x18, 0x46, 0x2b, 0xde, 0x30, 0x6d, 0x48, 0xa3, 0x70, 0xea, 0xef, 0x19, 0x6d, 0x4f, 0x7c,
	0xd7, 0x5d, 0xec, 0x15, 0x6f, 0x0f, 0xbb, 0x59, 0xe8, 0xb2, 0x13, 0x1f, 0x5d, 0x40, 0xb1, 0xd4,
	0x0b, 0x41, 0x36, 0x35, 0xa3, 0x38, 0xb7, 0xa5, 0x7e, 0x59, 0xf0, 0x1f, 0x03, 0x5d, 0x43, 0xff,
	0x91, 0x69, 0xcd, 0xa5, 0xd0, 0xf8, 0x23, 0x1a, 0x27, 0xd3, 0xc1, 0x0d, 0x9a, 0xf9, 0x37, 0xcf,
	0xdc, 0x7b, 0xbb, 0xac, 0xec, 0xeb, 0xae, 0x34, 0xf9, 0x8c, 0x60, 0x70, 0x90, 0x38, 0x00, 0x95,
	0x7c, 0x65, 0xc2, 0x33, 0xb1, 0x00, 0x8c, 0x13, 0x1d, 0xa6, 0xf8, 0x17, 0xd3, 0x25, 0x0c, 0xef,
	0xe5, 0x33, 0x17, 0x7f, 0x73, 0x13, 0x9f, 0x0d, 0xeb, 0x23, 0xd7, 0xe1, 0xa9, 0x5a, 0xb2, 0xdb,
	0xf1, 0xad, 0xc7, 0x93, 0x94, 0xb9, 0x09, 0xd2, 0x9f, 0xb8, 0xf2, 0x40, 0x0a, 0x7b, 0xe2, 0x6a,
	0xf2, 0x04, 0xe0, 0x66, 0x58, 0x64, 0x94, 0x9b, 0xb3, 0x6f, 0xf9, 0x0f, 0x59, 0x48, 0xba, 0x0d,
	0xd9, 0x36, 0xf4, 0xec, 0x8e, 0x4a, 0xaa, 0xb5, 0x3a, 0xdb, 0x61, 0x8e, 0xdc, 0x4d, 0xe6, 0x7f,
	0xff, 0xf6, 0x3b, 0x00, 0x00, 0xff, 0xff, 0x7f, 0x26, 0xa9, 0xb1, 0x0b, 0x02, 0x00, 0x00,
}
